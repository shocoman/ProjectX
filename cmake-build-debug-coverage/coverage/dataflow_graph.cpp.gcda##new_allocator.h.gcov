        -:    0:Source:D:/programming/mingwW64/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/ext/new_allocator.h
        -:    0:Graph:D:\programming\c\tac_parser\cmake-build-debug-coverage\CMakeFiles\tac_parser.dir\tac_worker\dataflow_graph.cpp.gcno
        -:    0:Data:D:\programming\c\tac_parser\cmake-build-debug-coverage\CMakeFiles\tac_parser.dir\tac_worker\dataflow_graph.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  using std::size_t;
        -:   45:  using std::ptrdiff_t;
        -:   46:
        -:   47:  /**
        -:   48:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   49:   *  @ingroup allocators
        -:   50:   *
        -:   51:   *  This is precisely the allocator defined in the C++ Standard.
        -:   52:   *    - all allocation calls operator new
        -:   53:   *    - all deallocation calls operator delete
        -:   54:   *
        -:   55:   *  @tparam  _Tp  Type of allocated object.
        -:   56:   */
        -:   57:  template<typename _Tp>
        -:   58:    class new_allocator
        -:   59:    {
        -:   60:    public:
        -:   61:      typedef size_t     size_type;
        -:   62:      typedef ptrdiff_t  difference_type;
        -:   63:      typedef _Tp*       pointer;
        -:   64:      typedef const _Tp* const_pointer;
        -:   65:      typedef _Tp&       reference;
        -:   66:      typedef const _Tp& const_reference;
        -:   67:      typedef _Tp        value_type;
        -:   68:
        -:   69:      template<typename _Tp1>
        -:   70:	struct rebind
        -:   71:	{ typedef new_allocator<_Tp1> other; };
        -:   72:
        -:   73:#if __cplusplus >= 201103L
        -:   74:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   75:      // 2103. propagate_on_container_move_assignment
        -:   76:      typedef std::true_type propagate_on_container_move_assignment;
        -:   77:#endif
        -:   78:
     180*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2Ev:
       11:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEEC2Ev:
       31:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandEC2Ev:
      123:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_EEEC2Ev:
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEEC2Ev:
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadEC2Ev:
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
     436*:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEEC2ERKSD_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSC_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEEC2ERKSC_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEEC2ERKSN_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandEC2ERKS2_:
      401:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockEC2ERKS3_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2ERKS3_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2ERKS3_:
       33:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKS9_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEEC2ERKSA_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSC_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
    #####:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEC2ERKSE_:
        1:   81:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   82:
        -:   83:      template<typename _Tp1>
        -:   84:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   85:
      57*:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIiED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED2Ev:
       11:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEED2Ev:
       29:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_EEED2Ev:
        2:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEED2Ev:
        1:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadED2Ev:
    #####:   86:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   87:
        -:   88:      pointer
        -:   89:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   90:      { return std::__addressof(__x); }
        -:   91:
        -:   92:      const_pointer
        -:   93:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   94:      { return std::__addressof(__x); }
        -:   95:
        -:   96:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:   97:      // about what the return value is when __n == 0.
        -:   98:      pointer
     325*:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
     325*:  101:	if (__n > this->max_size())
    #####:  102:	  std::__throw_bad_alloc();
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
     325*:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE8allocateEyPKv:
       44:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       44:  101:	if (__n > this->max_size())
       44:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       44:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       44:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE8allocateEyPKv:
      145:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
      145:  101:	if (__n > this->max_size())
      145:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
      145:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      145:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadE8allocateEyPKv:
       33:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       33:  101:	if (__n > this->max_size())
       33:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       33:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       33:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE8allocateEyPKv:
        5:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        5:  101:	if (__n > this->max_size())
        5:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        5:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        5:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE8allocateEyPKv:
       10:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       10:  101:	if (__n > this->max_size())
       10:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       10:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       10:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEyPKv:
       36:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       36:  101:	if (__n > this->max_size())
       36:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       36:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       36:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEE8allocateEyPKv:
       18:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       18:  101:	if (__n > this->max_size())
       18:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       18:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       18:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEE8allocateEyPKv:
        9:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        9:  101:	if (__n > this->max_size())
        9:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        9:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        9:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEE8allocateEyPKv:
        9:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        9:  101:	if (__n > this->max_size())
        9:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        9:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        9:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEE8allocateEyPKv:
       11:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
       11:  101:	if (__n > this->max_size())
       11:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
       11:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       11:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEE8allocateEyPKv:
        5:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
        5:  101:	if (__n > this->max_size())
        5:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
        5:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        5:  111-block  0
        -:  112:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEyPKv:
    #####:   99:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  100:      {
    #####:  101:	if (__n > this->max_size())
    %%%%%:  101-block  0
    #####:  102:	  std::__throw_bad_alloc();
    %%%%%:  102-block  0
        -:  103:
        -:  104:#if __cpp_aligned_new
        -:  105:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  106:	  {
        -:  107:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  108:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  109:	  }
        -:  110:#endif
    #####:  111:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  111-block  0
        -:  112:      }
------------------
        -:  113:
        -:  114:      // __p is not permitted to be a null pointer.
        -:  115:      void
     147*:  116:      deallocate(pointer __p, size_type)
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
     147*:  125:	::operator delete(__p);
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE10deallocateEPS9_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcy:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmy:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE10deallocateEPS1_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPiy:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE10deallocateEPS4_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadE10deallocateEPS1_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableE10deallocateEPS1_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockE10deallocateEPS2_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE10deallocateEPSP_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEE10deallocateEPSB_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt5tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_EEE10deallocateEPS8_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE10deallocateEPS5_y:
        5:  116:      deallocate(pointer __p, size_type)
        5:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        5:  125:	::operator delete(__p);
        5:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEE10deallocateEPSE_y:
        5:  116:      deallocate(pointer __p, size_type)
        5:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        5:  125:	::operator delete(__p);
        5:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE10deallocateEPS4_y:
       44:  116:      deallocate(pointer __p, size_type)
       44:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       44:  125:	::operator delete(__p);
       44:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE10deallocateEPSB_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateEPSB_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEE10deallocateEPSC_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE10deallocateEPSM_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE10deallocateEPSB_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS8_y:
       36:  116:      deallocate(pointer __p, size_type)
       36:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       36:  125:	::operator delete(__p);
       36:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE10deallocateEPSD_y:
       10:  116:      deallocate(pointer __p, size_type)
       10:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       10:  125:	::operator delete(__p);
       10:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEE10deallocateEPSF_y:
    #####:  116:      deallocate(pointer __p, size_type)
    %%%%%:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
    #####:  125:	::operator delete(__p);
    %%%%%:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEE10deallocateEPSA_y:
       18:  116:      deallocate(pointer __p, size_type)
       18:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       18:  125:	::operator delete(__p);
       18:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEE10deallocateEPS7_y:
        9:  116:      deallocate(pointer __p, size_type)
        9:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        9:  125:	::operator delete(__p);
        9:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEE10deallocateEPS5_y:
        9:  116:      deallocate(pointer __p, size_type)
        9:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
        9:  125:	::operator delete(__p);
        9:  125-block  0
        -:  126:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEE10deallocateEPSI_y:
       11:  116:      deallocate(pointer __p, size_type)
       11:  116-block  0
        -:  117:      {
        -:  118:#if __cpp_aligned_new
        -:  119:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  120:	  {
        -:  121:	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
        -:  122:	    return;
        -:  123:	  }
        -:  124:#endif
       11:  125:	::operator delete(__p);
       11:  125-block  0
        -:  126:      }
------------------
        -:  127:
        -:  128:      size_type
     505*:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
     505*:  130:      { return size_t(-1) / sizeof(_Tp); }
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE8max_sizeEv:
       44:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       44:  130:      { return size_t(-1) / sizeof(_Tp); }
       44:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorI7OperandE8max_sizeEv:
      249:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
      249:  130:      { return size_t(-1) / sizeof(_Tp); }
      249:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorI4QuadE8max_sizeEv:
       99:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       99:  130:      { return size_t(-1) / sizeof(_Tp); }
       99:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorI16ValueNumberTableE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorIP10BasicBlockE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE8max_sizeEv:
       15:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       15:  130:      { return size_t(-1) / sizeof(_Tp); }
       15:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE8max_sizeEv:
       10:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       10:  130:      { return size_t(-1) / sizeof(_Tp); }
       10:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeEv:
       36:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       36:  130:      { return size_t(-1) / sizeof(_Tp); }
       36:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEE8max_sizeEv:
       18:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       18:  130:      { return size_t(-1) / sizeof(_Tp); }
       18:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEE8max_sizeEv:
        9:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        9:  130:      { return size_t(-1) / sizeof(_Tp); }
        9:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEE8max_sizeEv:
        9:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        9:  130:      { return size_t(-1) / sizeof(_Tp); }
        9:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEE8max_sizeEv:
       11:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
       11:  130:      { return size_t(-1) / sizeof(_Tp); }
       11:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEE8max_sizeEv:
        5:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
        5:  130:      { return size_t(-1) / sizeof(_Tp); }
        5:  130-block  0
------------------
_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv:
    #####:  129:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  130:      { return size_t(-1) / sizeof(_Tp); }
    %%%%%:  130-block  0
------------------
        -:  131:
        -:  132:#if __cplusplus >= 201103L
        -:  133:      template<typename _Up, typename... _Args>
        -:  134:	void
     311*:  135:	construct(_Up* __p, _Args&&... __args)
     311*:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadE9constructIS1_JS1_EEEvPT_DpOT0_:
        7:  135:	construct(_Up* __p, _Args&&... __args)
        7:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        7:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESF_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE9constructISP_JSP_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRiEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE9constructISP_JRSP_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE9constructIS5_JS5_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE9constructIS1_JRKS1_EEEvPT_DpOT0_:
       22:  135:	construct(_Up* __p, _Args&&... __args)
       22:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       22:  136-block  0
       22:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE9constructIS5_JRPS2_EEEvPT_DpOT0_:
        9:  135:	construct(_Up* __p, _Args&&... __args)
        9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        9:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE9constructIS3_JRS3_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockE9constructIS2_JRKS2_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableE9constructIS1_JEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadE9constructIS1_JRKS1_EEEvPT_DpOT0_:
       65:  135:	construct(_Up* __p, _Args&&... __args)
       65:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       65:  136-block  0
       65:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE9constructIS1_JRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE9constructIS3_JRS3_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_:
       27:  135:	construct(_Up* __p, _Args&&... __args)
       27:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       27:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE9constructIS4_JEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE9constructIS1_JNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvPT_DpOT0_:
       30:  135:	construct(_Up* __p, _Args&&... __args)
       30:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       30:  136-block  0
       30:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEE9constructIS6_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESD_IJEEEEEvPT_DpOT0_:
        9:  135:	construct(_Up* __p, _Args&&... __args)
        9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        9:  136-block  0
        9:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE9constructIS8_JRKS8_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE9constructISC_JRKSC_EEEvPT_DpOT0_:
        1:  135:	construct(_Up* __p, _Args&&... __args)
        1:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  136-block  0
        1:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE9constructISC_JSC_EEEvPT_DpOT0_:
        9:  135:	construct(_Up* __p, _Args&&... __args)
        9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        9:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRKS7_EEEvPT_DpOT0_:
       36:  135:	construct(_Up* __p, _Args&&... __args)
       36:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       36:  136-block  0
       36:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructISA_JRiRKS9_EEEvPT_DpOT0_:
        9:  135:	construct(_Up* __p, _Args&&... __args)
        9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        9:  136-block  0
        9:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEE9constructISD_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESK_IJEEEEEvPT_DpOT0_:
        5:  135:	construct(_Up* __p, _Args&&... __args)
        5:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        5:  136-block  0
        5:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEE9constructISH_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESO_IJEEEEEvPT_DpOT0_:
       11:  135:	construct(_Up* __p, _Args&&... __args)
       11:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       11:  136-block  0
       11:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_:
        9:  135:	construct(_Up* __p, _Args&&... __args)
        9:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        9:  136-block  0
        9:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE9constructISL_JRKSL_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESG_IJEEEEEvPT_DpOT0_:
       18:  135:	construct(_Up* __p, _Args&&... __args)
       18:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       18:  136-block  0
       18:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEE9constructISE_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESL_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS7_JRS7_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE9constructISL_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESS_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE9constructISL_JRS8_SK_EEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEE9constructISB_JRKSt21piecewise_construct_tS3_IJRSA_EES3_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESH_IJEEEEEvPT_DpOT0_:
    #####:  135:	construct(_Up* __p, _Args&&... __args)
    #####:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  136-block  0
    %%%%%:  136-block  1
    $$$$$:  136-block  2
    $$$$$:  136-block  3
    $$$$$:  136-block  4
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE9constructIS3_JS3_EEEvPT_DpOT0_:
       44:  135:	construct(_Up* __p, _Args&&... __args)
       44:  136:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
       44:  136-block  0
------------------
        -:  137:
        -:  138:      template<typename _Up>
        -:  139:	void
     149*:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiEEE7destroyISA_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorI16ValueNumberTableE7destroyIS1_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorIP10BasicBlockE7destroyIS2_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorI7OperandE7destroyIS1_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE7destroyIiEEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE7destroyIS4_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE7destroyIS3_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorI4QuadE7destroyIS1_EEvPT_:
        7:  140:	destroy(_Up* __p) { __p->~_Up(); }
        7:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt10unique_ptrI10BasicBlockSt14default_deleteIS2_EEE7destroyIS5_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISA_EESaISD_EEE13LivenessStateSt4lessIS7_ESaISt4pairIKS7_SI_EEEE7destroyISP_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx114listIiSaIiEEEEEE7destroyIS8_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIP10BasicBlockEE7destroyIS3_EEvPT_:
       44:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEEE7destroyISD_EEvPT_:
        5:  140:	destroy(_Up* __p) { __p->~_Up(); }
        5:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyISA_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt5tupleIJN4Quad4TypeESt6vectorIiSaIiEEEEiEEE7destroyISB_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE7destroyIiEEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEZ17liveness_analysesRKSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteISC_EESaISF_EEE13LivenessStateEEE7destroyISL_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEE7destroyISA_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS7_EEvPT_:
       36:  140:	destroy(_Up* __p) { __p->~_Up(); }
       36:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE7destroyISC_EEvPT_:
       10:  140:	destroy(_Up* __p) { __p->~_Up(); }
       10:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiZ13live_analysesRSt6vectorISt10unique_ptrI10BasicBlockSt14default_deleteIS6_EESaIS9_EEE14BlockLiveStateEEE7destroyISE_EEvPT_:
    #####:  140:	destroy(_Up* __p) { __p->~_Up(); }
    %%%%%:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiSt3setIiSt4lessIiESaIiEEEEE7destroyIS9_EEvPT_:
       18:  140:	destroy(_Up* __p) { __p->~_Up(); }
       18:  140-block  0
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiP10BasicBlockEEE7destroyIS6_EEvPT_:
        9:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKiiEEE7destroyIS4_EEvPT_:
        9:  140:	destroy(_Up* __p) { __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt3setIP10BasicBlockSt4lessISC_ESaISC_EEEEE7destroyISH_EEvPT_:
       11:  140:	destroy(_Up* __p) { __p->~_Up(); }
       11:  140-block  0
------------------
        -:  141:#else
        -:  142:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  143:      // 402. wrong new expression in [some_] allocator::construct
        -:  144:      void
        -:  145:      construct(pointer __p, const _Tp& __val)
        -:  146:      { ::new((void *)__p) _Tp(__val); }
        -:  147:
        -:  148:      void
        -:  149:      destroy(pointer __p) { __p->~_Tp(); }
        -:  150:#endif
        -:  151:    };
        -:  152:
        -:  153:  template<typename _Tp>
        -:  154:    inline bool
        -:  155:    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  156:    { return true; }
        -:  157:
        -:  158:  template<typename _Tp>
        -:  159:    inline bool
        -:  160:    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  161:    { return false; }
        -:  162:
        -:  163:_GLIBCXX_END_NAMESPACE_VERSION
        -:  164:} // namespace
        -:  165:
        -:  166:#endif
